#!/usr/bin/env bash
source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/config"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"
if [[ -f "$PLUGIN_AVAILABLE_PATH/docker-options/functions" ]]; then
  source "$PLUGIN_AVAILABLE_PATH/docker-options/functions"
fi

cmd-traefik-list() {
  ls "${TRAEFIK_DATA_ROOT}/config/apps/" | while read line; do
    declare APP="$(basename ${line} .yaml)";
    echo "${APP}";
  done
}

cmd-traefik-enable() {
  declare APP="$2"
  declare APP_DOMAIN=$(dokku domains:report "${APP}" | awk -F':' '/Domains app vhosts/{ gsub(/ /, "", $2); print $2 }')
  if [ ! -z "${APP_DOMAIN}" ]; then
    declare APP_LABEL=$(sed 's/\./-/g' <<< $APP_DOMAIN)
    echo "Configuring ${APP}..."
    cat << EOF > "${TRAEFIK_DATA_ROOT}/config/apps/${APP_LABEL}.yaml"
http:
  routers:
    ${APP_LABEL}:
      rule: Host(\`${APP_DOMAIN}\`)
      entryPoints:
        - websecure
      service: dokku-http
      tls:
        certResolver: letsencrypt
EOF
    touch "${TRAEFIK_DATA_ROOT}/config/apps.reload"
    echo "Should soon be available at =>"
    echo " https://${APP_DOMAIN}"
  else
    echo "Could not determine app domain, please ensure proxy was setup."
  fi
}
cmd-traefik-disable() {
  declare APP="$2"
  declare APP_DOMAIN=$(dokku domains:report "${APP}" | awk -F':' '/Domains app vhosts/{ gsub(/ /, "", $2); print $2 }')
  declare APP_LABEL=$(sed 's/\./-/g' <<< $APP_DOMAIN)
  echo "Disabling ${APP} => ${APP_DOMAIN}..."
  rm "${TRAEFIK_DATA_ROOT}/config/apps/${APP_LABEL}.yaml"
}

cmd-traefik-configure() {
  eval "$(config_export global)"

  if [[ "${DOKKU_LETSENCRYPT_EMAIL}" == "" ]]; then 
    echo "DOKKU_LETSENCRYPT_EMAIL is required, please set it with dokku config:set DOKKU_LETSENCRYPT_EMAIL=email@example.com --global";
    exit 1;
  fi

  mkdir -p "${TRAEFIK_DATA_ROOT}/config/apps" "${TRAEFIK_DATA_ROOT}/data"
  cat <<EOF > "${TRAEFIK_DATA_ROOT}/traefik.yaml"
providers:
  file:
    directory: /config
    watch: true

entryPoints:
  websecure:
    address: :443

certificatesResolvers:
  letsencrypt:
    acme:
      email: "${DOKKU_LETSENCRYPT_EMAIL}"
      storage: "/data/acme.json"
      tlsChallenge: {}
EOF
  mkdir -p "${TRAEFIK_DATA_ROOT}/config/apps" "${TRAEFIK_DATA_ROOT}/data"
  cat <<EOF > "${TRAEFIK_DATA_ROOT}/config/service.yaml"
http:
  services:
    dokku-http:
      loadBalancer:
        servers:
          - url: http://172.17.0.1:80/
EOF
}

cmd-traefik-start() {
  if [[ "$(docker ps -qf name=${PLUGIN_CONTAINER_NAME})" != "" ]]; then
    echo "Traefik is already running.";
    exit 0;
  fi

  cmd-traefik-configure

  docker run -d \
    --name="${PLUGIN_CONTAINER_NAME}" \
    --network=host \
    --restart=unless-stopped \
    -v "${TRAEFIK_DATA_ROOT}/traefik.yaml:/etc/traefik/traefik.yaml" \
    -v "${TRAEFIK_DATA_ROOT}/config/:/config" \
    -v "${TRAEFIK_DATA_ROOT}/data/:/data" \
    traefik
}

cmd-traefik-stop() {
  docker stop "${PLUGIN_CONTAINER_NAME}"
  docker rm "${PLUGIN_CONTAINER_NAME}"
}

cmd-traefik-restart() {
  cmd-traefik-stop && cmd-traefik-start
}

cmd-traefik-logs() {
  docker logs -f "${PLUGIN_CONTAINER_NAME}"
}
